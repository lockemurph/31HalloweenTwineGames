::Start
<<display actualStart>>

::StoryTitle
Spooky House

::StoryAuthor
Murph


::score
SCORE <<print $scored>> / 10


::actualStart
<<silently>>
<<set $scored = 1>>
<<set $mirrorScored = "false";>>
<<set $ghostScored = "false";>>
<<set $boneScored = "false";>>

<<endsilently>>

<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
WELCOME TO <<timedinsert 1s>>SPOOKY HOUSE<<endtimedinsert>>.
<br>[[START|outside]]
<br><<display score>>
</div>
<br>Use headphones for the optimal experinence

::outside
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
You are in front of SPOOKY HOUSE.
<<timedinsert 1s>>It is super spooky<<endtimedinsert>>.
<<timedinsert 2s>>You are super spooked<br><br>[[ENTER SPOOKY HOUSE|ENTRANCE]]<br>[[GO TO THE GRAVEYARD|GRAVEYARD]]<<endtimedinsert>>.
 <br><<display score>>
</div>

::ENTRANCE
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display entranceText>>
</div>

::entranceText
<<timedinsert 1s>>The entrance to the manor is full of spooky dust<<endtimedinsert>>.
<<timedinsert 1s>>Several painting are on the wall.  They are very spooky. There is a dusty mirror here as well.  There are stairs to the top level.  There are doors to the east and west<<endtimedinsert>>.
<<timedinsert 2s>><br>[[GO UPSTAIRS|upstairs]]<br>[[GO EAST|kitchen]]<br>[[GO WEST|library]]<br>[[LOOK IN MIRROR|mirror]]<br>[[GO OUTSIDE|outside]]<<endtimedinsert>>.
 <br>
 <<display score>>

::upstairs
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display upstairsText>>
</div>

::upstairsText
<<timedinsert 1s>>The upstairs has a portait for the owner of the manor.  The plaque says Mr Spooky Spookerton<br><<endtimedinsert>>.
<<timedinsert 2s>>The stairs downstairs lead to darkness.  There are spooky doors to the left and right.  One of them probably won't kill you.<br><<endtimedinsert>>.
<<timedinsert 3s>>[[GO DOWN|ENTRANCE]]<br>[[GO LEFT|throne]]<br>[[GO RIGHT|ka]]<<endtimedinsert>>.
 <br><<display score>>

::throne
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display throneText>>
</div>

::throneText
<<timedinsert 1s>>The throneroom of the master vampire is here.<br><<endtimedinsert>>.
<<timedinsert 2s>>The spooky master vampire is here.<br><<endtimedinsert>>.
<<if $mirrorScored eq "false">>
   <<timedinsert 3s>>But you don't know if you are a vampire or not<br>  You die from spooky confusion<<endtimedinsert>>.
<<else if $ghostScored eq "false">>
<<timedinsert 3s>>But you lack hydration<br> You die from lack of ecto-plasm<<endtimedinsert>>.
<<else if $boneScored eq "false">>
<<timedinsert 3s>>But you lack a sweet sword to fight with<br> You die from lameness<<endtimedinsert>>.
<<else>>
<<set $scored = 10>>
<<timedinsert 3s>>You use your knowledge, sword and ectoplasm not be spooky<br> You WIN<<endtimedinsert>>.
<<endif>>
<<timedinsert 4s>>[[GAME OVER|actualStart]]<<endtimedinsert>>.
 <br><<display score>>

::ka
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
How did you end up in the kitchen?<br>
<<display kitchenText>>
</div>

::kitchen
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display kitchenText>>
</div>

::kitchenText
<<timedinsert 1s>>The kitchen is full of spooky knives.<<endtimedinsert>>.
<<timedinsert 2s>>It would be spooky if you were stabbed by a spooky knife<<endtimedinsert>>.
<<timedinsert 3s>>That is what happens.  A spooky knife stabbes you to death<<endtimedinsert>>.
<<timedinsert 4s>>[[GAME OVER|actualStart]]<<endtimedinsert>>.
 <br><<display score>>


::library
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display libraryText>>
</div>

::libraryText
<<timedinsert 1s>>The library is filled with spooky books<<endtimedinsert>>.
<<timedinsert 2s>>Dont go mad reading them<<endtimedinsert>>.
<<timedinsert 3s>>That would be spooky<<endtimedinsert>>.
<br> <<mousereplace>>[[READ BOOKS|mad]]<<becomes>>[[GO MAD READING BOOKS|mad]]<<endmousereplace>><br>[[GO BACK|ENTRANCE]]
 <<display score>>

::mad
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display madText>>
</div>

::madText
<<timedinsert 1s>>YOU GO MAD<<endtimedinsert>>.
<<timedinsert 2s>>YOU WERE TOLD NOT TO.<<endtimedinsert>>.
<<timedinsert 3s>>It is very spooky<<endtimedinsert>>.
<<timedinsert 4s>>[[GAME OVER|actualStart]]<<endtimedinsert>>.
 <br><<display score>>

::mirror
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display mirrorText>>
</div>

::mirrorText
PHEW.  You see yourself in the mirror.  you are not a vampire.  That would be spooky.
<<once>> You gain a point. 
<<endonce>>
<br>
<<silently>>
<<if $mirrorScored eq "false">>
<<set $mirrorScored = "true">>
<<set $scored = $scored + 1>>
<<endif>>
<<endsilently>>

<<display entranceText>>

::GRAVEYARD
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display graveyardText>>
</div>

::graveyardText
<<timedinsert 1s>>The graveyard is filled with spooky graves.<<endtimedinsert>>.
<<timedinsert 2s>><br>A ghost is floating nearby.  There is a bone on the ground.<<endtimedinsert>>.
<<timedinsert 3s>>[[PUNCH GHOST|ghost]]<br>[[PICK UP BONE|bone]]<br>[[GO BACK|outside]]<<endtimedinsert>>.
 <br><<display score>>

::ghost
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display ghostText>>
</div>

::ghostText
<<timedinsert 1s>>The ghost lacks a coporeal form<<endtimedinsert>>.
<<timedinsert 2s>>The ghost is super easy to beat up because of this<<endtimedinsert>>.
<<if $ghostScored eq "false">>
<<timedinsert 3s>>You take the ecto-plasm the ghost leaks.<br>YOU GAIN A POINT<<endtimedinsert>>.
<<endif>>
<<silently>>
<<if $ghostScored eq "false">>
<<set $ghostScored = "true">>
<<set $scored = $scored + 1>>
<<endif>>
<<endsilently>>
<<timedinsert 4s>>The graveyard is filled with spooky graves.<<endtimedinsert>>.
<<timedinsert 4s>><br>A ghost is floating nearby.  There is a bone on the ground.<<endtimedinsert>>.
<<timedinsert 4s>>[[PUNCH GHOST|ghost]]<br>[[PICK UP BONE|bone]]<br>[[GO BACK|outside]]<<endtimedinsert>>.
 <br><<display score>>


::bone
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display boneText>>
</div>

::boneText
<<if $boneScored eq "false">>
<<timedinsert 1s>>A skeleton jumps up when you try to take the bone<<endtimedinsert>>.
<<timedinsert 2s>>"ANSwer my spooky riddle" the skeleton says<<endtimedinsert>>.
<<timedinsert 3s>>[[ANSWER RIDDLE|correct]]<br>[[DONT ANSWER RIDDLE|wrong]]<<endtimedinsert>>.
<<endif>>
<<if $boneScored eq "true">>
<<timedinsert 1s>>The skeleton remains dead<<endtimedinsert>>.
<<timedinsert 4s>>The graveyard is filled with spooky graves.<<endtimedinsert>>.
<<timedinsert 4s>><br>A ghost is floating nearby.  There is a bone on the ground.<<endtimedinsert>>.
<<timedinsert 4s>>[[PUNCH GHOST|ghost]]<br>[[PICK UP BONE|bone]]<br>[[GO BACK|outside]]<<endtimedinsert>>.
<<endif>>
 <<display score>>

::correct
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display correctText>>
</div>

::correctText
<<timedinsert 1s>>You kill the skeleton with your ability to answer<<endtimedinsert>>.
<<timedinsert 2s>>The skeleton crumples into a sweet sword<<endtimedinsert>>.
<<timedinsert 3s>>You take the sweet sword.  You gain a point<<endtimedinsert>>.
<<timedinsert 4s>>The graveyard is filled with spooky graves.<<endtimedinsert>>.
<<timedinsert 4s>><br>A ghost is floating nearby.  There is a bone on the ground.<<endtimedinsert>>.
<<timedinsert 4s>>[[PUNCH GHOST|ghost]]<br>[[PICK UP BONE|bone]]<br>[[GO BACK|outside]]<<endtimedinsert>>.
<<silently>>
<<if $boneScored eq "false">>
<<set $boneScored = "true">>
<<set $scored = $scored + 1>>
<<endif>>
<<endsilently>>
 <br><<display score>>

::wrong
<<playsound "http://traffic.libsyn.com/dorknight/ty.mp3" >>
[img[terminal.png]]
<div class="dos">
<<display wrongText>>
</div>

::wrongText
<<timedinsert 1s>>It is spooky how dumb you are<<endtimedinsert>>.
<<timedinsert 4s>>[[GAME OVER|actualStart]]<<endtimedinsert>>.
 <br><<display score>>

::csssss [stylesheet]
.dos {
width: 582px;
background: #000;
padding:30px;
font-size: 9pt;
font-family: fixedsys, LucidaTerminal, monospace;
color: #909090;
text-align: left;
overflow:auto;
border: 5px solid #909090;
      text-shadow: 0 0 10px #fff;
      text-transform:uppercase;
                   
}

::htmssslstuff [script]
(function () {
	var bs = String.fromCharCode(92);
	Wikifier.formatters.unshift({
		name: "htmltag",
		match: "<"+bs+"w+(?:(?:"+bs+"s+"+bs+"w+(?:"+bs+"s*="+bs+"s*(?:"+'"'+".*?"+'"'+"|'.*?'|[^'"+'"'+">"+bs+"s]+))?)+"+bs+"s*|"+bs+"s*)"+bs+"/?>",
		tagname: "<("+bs+"w+)",
		voids: ["br", "hr", "area", "img", "input", "embed", "param", "source", "track"],
		handler: function (a) {
			var re, tn, e;
			re = new RegExp(this.tagname).exec(a.matchText);
			tn = re && re[1];
			if(tn) {
				e = document.createElement(a.output.tagName);
				e.innerHTML = a.matchText;
				e = e.firstChild;
				if(this.voids.indexOf(tn.toLowerCase()) == -1) {
					a.subWikify(e, "<" + bs + "/" + bs + "s*" + tn + bs + "s*>");
				}
				a.output.appendChild(e);
			}
		}
	});
}());

::sound [script]
(function () {
  "use strict";
  version.extensions['soundMacros'] = {
    major: 1,
    minor: 1,
    revision: 2
  };
  var p = macros['playsound'] = {
    soundtracks: {},
    handler: function (a, b, c, d) {
      var loop = function (m) {
          if (m.loop == undefined) {
            m.loopfn = function () {
              this.play();
            };
            m.addEventListener('ended', m.loopfn, 0);
          } else m.loop = true;
          m.play();
          };
      var s = eval(d.fullArgs());
      if (s) {
        s = s.toString();
        var m = this.soundtracks[s.slice(0, s.lastIndexOf("."))];
        if (m) {
          if (b == "playsound") {
            m.play();
          } else if (b == "loopsound") {
            loop(m);
          } else if (b == "pausesound") {
            m.pause();
          } else if (b == "unloopsound") {
            if (m.loop != undefined) {
              m.loop = false;
            } else if (m.loopfn) {
              m.removeEventListener('ended', m.loopfn);
              delete m.loopfn;
            }
          } else if (b == "stopsound") {
            m.pause();
            m.currentTime = 0;
          } else if (b == "fadeoutsound" || b == "fadeinsound") {
            if (m.interval) clearInterval(m.interval);
            if (b == "fadeinsound") {
              if (m.currentTime>0) return;
              m.volume = 0;
              loop(m);
            } else {
              if (!m.currentTime) return;
              m.play();
            }
            var v = m.volume;
            m.interval = setInterval(function () {
              v = Math.min(1, Math.max(0, v + 0.005 * (b == "fadeinsound" ? 1 : -1)));
              m.volume = Math.easeInOut(v);
              if (v == 0 || v == 1) clearInterval(m.interval);
              if (v == 0) {
                m.pause();
                m.currentTime = 0;
                m.volume = 1;
              }
            }, 10);
          }
        }
      }
    }
  }
  macros['fadeinsound'] = p;
  macros['fadeoutsound'] = p;
  macros['unloopsound'] = p;
  macros['loopsound'] = p;
  macros['pausesound'] = p;
  macros['stopsound'] = p;
  macros['stopallsound'] = {
    handler: function () {
      var s = macros.playsound.soundtracks;
      for (var j in s) {
		if (s.hasOwnProperty(j)) {
          s[j].pause();
          if (s[j].currentTime) {
		    s[j].currentTime = 0;
		  }
		}
      }
    }
  }
  var div = document.getElementById("storeArea").firstChild;
  var fe = ["ogg", "mp3", "wav", "webm"];
  while (div) {
    var b = String.fromCharCode(92);
    var q = '"';
    var re = "['" + q + "]([^" + q + "']*?)" + b + ".(ogg|mp3|wav|webm)['" + q + "]";
    k(new RegExp(re, "gi"));
    div = div.nextSibling;
  }

  function k(c, e) {
    do {
      var d = c.exec(div.innerHTML);
      if (d) {
        var a = new Audio();
        if (a.canPlayType) {
          for (var i = -1; i < fe.length; i += 1) {
            if (i >= 0) d[2] = fe[i];
            if (a.canPlayType("audio/" + d[2])) break;
          }
          if (i < fe.length) {
            a.setAttribute("src", d[1] + "." + d[2]);
            a.interval = null;
            macros.playsound.soundtracks[d[1]] = a;
          } else console.log("Browser can't play '" + d[1] + "'");
        }
      }
    } while (d);
  }
}());



::replacema [script]
(function(){version.extensions.replaceMacrosCombined={major:1,minor:1,revision:0};
var nullobj={handler:function(){}};function showVer(n,notrans){n.innerHTML="";
new Wikifier(n,n.tweecode);n.setAttribute("data-enabled","true");
n.style.display="inline";n.classList.remove("revision-span-out");
if(!notrans){n.classList.add("revision-span-in");if(n.timeout){clearTimeout(n.timeout)
}n.timeout=setTimeout(function(){n.classList.remove("revision-span-in");
n=null},1)}}function hideVer(n,notrans){n.setAttribute("data-enabled","false");
n.classList.remove("revision-span-in");if(n.timeout){clearTimeout(n.timeout)
}if(!notrans){n.classList.add("revision-span-out");n.timeout=setTimeout(function(){if(n.getAttribute("data-enabled")=="false"){n.classList.remove("revision-span-out");
n.style.display="none";n.innerHTML=""}n=null},1000)}else{n.style.display="none";
n.innerHTML="";n=null}}function tagcontents(b,starttags,desttags,endtags,k){var l=0,c="",tg,a,i;
function tagfound(i,e){for(var j=0;j<e.length;j++){if(a.indexOf("<<"+e[j],i)==i){return e[j]
}}}a=b.source.slice(k);for(i=0;i<a.length;i++){if(tg=tagfound(i,starttags)){l++
}else{if((tg=tagfound(i,desttags))&&l==0){b.nextMatch=k+i+tg.length+4;
return[c,tg]}else{if(tg=tagfound(i,endtags)){l--;if(l<0){return null
}}}}c+=a.charAt(i)}return null}var begintags=[];var endtags=[];
function revisionSpanHandler(g,e,f,b){var k=b.source.indexOf(">>",b.matchStart)+2,vsns=[],vtype=e,flen=f.length,becomes,c,cn,m,h,vsn;
function mkspan(vtype){h=insertElement(m,"span",null,"revision-span "+vtype);
h.setAttribute("data-enabled",false);h.style.display="none";h.tweecode="";
return h}if(this.shorthand&&flen){while(f.length>0){vsns.push([f.shift(),(this.flavour=="insert"?"gains":"becomes")])
}}else{if(this.flavour=="insert"||(this.flavour=="continue"&&this.trigger=="time")){vsns.push(["","becomes"])
}}if(this.flavour=="continue"&&flen){b.nextMatch=k+b.source.slice(k).length;
vsns.push([b.source.slice(k),vtype])}else{becomes=["becomes","gains"];
c=tagcontents(b,begintags,becomes.concat(endtags),endtags,k);
if(c&&endtags.indexOf(c[1])==-1){while(c){vsns.push(c);c=tagcontents(b,begintags,becomes,endtags,b.nextMatch)
}c=tagcontents(b,begintags,["end"+e],endtags,b.nextMatch)}if(!c){throwError(g,"can't find matching end"+e);
return}vsns.push(c);if(this.flavour=="continue"){k=b.nextMatch;
b.nextMatch=k+b.source.slice(k).length;vsns.push([b.source.slice(k),""])
}}if(this.flavour=="remove"){vsns.push(["","becomes"])}cn=0;m=insertElement(g,"span",null,e);
m.setAttribute("data-flavour",this.flavour);h=mkspan("initial");
vsn=vsns.shift();h.tweecode=vsn[0];showVer(h,true);while(vsns.length>0){if(vsn){vtype=vsn[1]
}vsn=vsns.shift();h=mkspan(vtype);h.tweecode=vsn[0]}if(typeof this.setup=="function"){this.setup(m,g,f)
}}function quantity(m){return(m.children.length-1)+(m.getAttribute("data-flavour")=="remove")
}function revisionSetup(m,g,f){m.className+=" "+f[0].replace(" ","_")
}function keySetup(m,g,f){var fl=this.flavour,key=f[0];m.setEventListener("keydown",function l(e){var done=!revise("revise",m);
if(done){m.removeEventListener("keydown",l)}})}function timeSetup(m,g,f){function cssTimeUnit(s){if(typeof s=="string"){if(s.slice(-2).toLowerCase()=="ms"){return Number(s.slice(0,-2))||0
}else{if(s.slice(-1).toLowerCase()=="s"){return Number(s.slice(0,-1))*1000||0
}}}throwError(g,s+" isn't a CSS time unit");return 0}var fl=this.flavour;
var tm=cssTimeUnit(f[0]);setTimeout(function timefn(){var done=!revise("revise",m);
if(!done){setTimeout(timefn,tm)}},tm)}function hoverSetup(m){m.onmouseover=function(){revise("revise",this)
};m.onmouseout=function(){revise("revert",this)};m=null}function mouseSetup(m){var fl=this.flavour,evt=(window.onmouseenter===null?"onmouseenter":"onmouseover");
m[evt]=function(){var done=!revise("revise",this);if(done){this[evt]=null
}};m=null}function linkSetup(m,g,f){var fl=this.flavour,l=Wikifier.createInternalLink(),p=m.parentNode;
l.className="internalLink replaceLink";p.insertBefore(l,m);l.insertBefore(m,null);
l.onclick=function(){var p,done=false;if(m&&m.parentNode==this){done=!revise("revise",m);
scrollWindowTo(m)}if(done){this.parentNode.insertBefore(m,this);
this.parentNode.removeChild(this)}};l=null}function visitedSetup(m,g,f){var i,done,shv=state.history[0].variables,os="once seen",d=(m.firstChild&&(this.flavour=="insert"?m.firstChild.nextSibling:m.firstChild).tweecode);
shv[os]=shv[os]||{};if(d&&!shv[os].hasOwnProperty(d)){shv[os][d]=1
}else{for(i=shv[os][d];i>0&&!done;i--){done=!revise("revise",m,true)
}if(shv[os].hasOwnProperty(d)){shv[os][d]+=1}}}[{name:"insert",flavour:"insert",trigger:"link",setup:linkSetup},{name:"timedinsert",flavour:"insert",trigger:"time",setup:timeSetup},{name:"insertion",flavour:"insert",trigger:"revisemacro",setup:revisionSetup},{name:"later",flavour:"insert",trigger:"visited",setup:visitedSetup},{name:"keyinsert",flavour:"insert",trigger:"key",setup:keySetup},{name:"replace",flavour:"replace",trigger:"link",setup:linkSetup},{name:"timedreplace",flavour:"replace",trigger:"time",setup:timeSetup},{name:"mousereplace",flavour:"replace",trigger:"mouse",setup:mouseSetup},{name:"hoverreplace",flavour:"replace",trigger:"hover",setup:hoverSetup},{name:"revision",flavour:"replace",trigger:"revisemacro",setup:revisionSetup},{name:"keyreplace",flavour:"replace",trigger:"key",setup:keySetup},{name:"timedremove",flavour:"remove",trigger:"time",setup:timeSetup},{name:"mouseremove",flavour:"remove",trigger:"mouse",setup:mouseSetup},{name:"hoverremove",flavour:"remove",trigger:"hover",setup:hoverSetup},{name:"removal",flavour:"remove",trigger:"revisemacro",setup:revisionSetup},{name:"once",flavour:"remove",trigger:"visited",setup:visitedSetup},{name:"keyremove",flavour:"remove",trigger:"key",setup:keySetup},{name:"continue",flavour:"continue",trigger:"link",setup:linkSetup},{name:"timedcontinue",flavour:"continue",trigger:"time",setup:timeSetup},{name:"mousecontinue",flavour:"continue",trigger:"mouse",setup:mouseSetup},{name:"keycontinue",flavour:"continue",trigger:"key",setup:keySetup},{name:"cycle",flavour:"cycle",trigger:"revisemacro",setup:revisionSetup},{name:"mousecycle",flavour:"cycle",trigger:"mouse",setup:mouseSetup},{name:"timedcycle",flavour:"cycle",trigger:"time",setup:timeSetup},{name:"keycycle",flavour:"replace",trigger:"key",setup:keySetup}].forEach(function(e){e.handler=revisionSpanHandler;
e.shorthand=(["link","mouse","hover"].indexOf(e.trigger)>-1);
macros[e.name]=e;macros["end"+e.name]=nullobj;begintags.push(e.name);
endtags.push("end"+e.name)});function insideDepartingSpan(elem){var r=elem.parentNode;
while(!r.classList.contains("passage")){if(r.classList.contains("revision-span-out")){return true
}r=r.parentNode}}function reviseAll(rt,rname){var rall=document.querySelectorAll(".passage ."+rname),ret=false;
for(var i=0;i<rall.length;i++){if(!insideDepartingSpan(rall[i])){ret=revise(rt,rall[i])||ret
}}return ret}function revise(rt,r,notrans){var ind2,curr,next,ind=-1,rev=(rt=="revert"),rnd=(rt.indexOf("random")>-1),fl=r.getAttribute("data-flavour"),rc=r.childNodes,cyc=(fl=="cycle"),rcl=rc.length-1;
function doToGainerSpans(n,fn){for(var k=n-1;k>=0;k--){if(rc[k+1].classList.contains("gains")){fn(rc[k],notrans)
}else{break}}}for(var k=0;k<=rcl;k++){if(rc[k].getAttribute("data-enabled")=="true"){ind=k
}}if(rev){ind-=1}curr=(ind>=0?rc[ind]:(cyc?rc[rcl]:null));ind2=ind;
if(rnd){ind2=(ind+(Math.floor(Math.random()*rcl)))%rcl}next=((ind2<rcl)?rc[ind2+1]:(cyc?rc[0]:null));
var docurr=(rev?showVer:hideVer);var donext=(rev?hideVer:showVer);
var currfn=function(){if(!(next&&next.classList.contains("gains"))||rnd){docurr(curr,notrans);
doToGainerSpans(ind,docurr,notrans)}};var nextfn=function(){donext(next,notrans);
if(rnd){doToGainerSpans(ind2+1,donext,notrans)}};if(!rev){currfn();
nextfn()}else{nextfn();currfn()}return(cyc?true:(rev?(ind>0):(ind2<rcl-1)))
}macros.revert=macros.revise=macros.randomise=macros.randomize={handler:function(a,b,c){var l,rev,rname;
function disableLink(l){l.style.display="none"}function enableLink(l){l.style.display="inline"
}function updateLink(l){if(l.className.indexOf("random")>-1){enableLink(l);
return}var rall=document.querySelectorAll(".passage ."+rname),cannext,canprev,i,ind,r,fl;
for(i=0;i<rall.length;i++){r=rall[i],fl=r.getAttribute("data-flavour");
if(insideDepartingSpan(r)){continue}if(fl=="cycle"){cannext=canprev=true
}else{if(r.firstChild.getAttribute("data-enabled")==!1+""){canprev=true
}if(r.lastChild.getAttribute("data-enabled")==!1+""){cannext=true
}}}var can=(l.classList.contains("revert")?canprev:cannext);(can?enableLink:disableLink)(l)
}function toggleText(w){w.classList.toggle(rl+"Enabled");w.classList.toggle(rl+"Disabled");
w.style.display=((w.style.display=="none")?"inline":"none")}var rl="reviseLink";
if(c.length<2){throwError(a,b+" macro needs 2 parameters");return
}rname=c.shift().replace(" ","_");l=Wikifier.createInternalLink(a,null);
l.className="internalLink "+rl+" "+rl+"_"+rname+" "+b;var v="";
var end=false;var out=false;if(c.length>1&&c[0][0]=="$"){v=c[0].slice(1);
c.shift()}switch(c[c.length-1]){case"end":end=true;c.pop();break;
case"out":out=true;c.pop();break}var h=state.history[0].variables;
for(var i=0;i<c.length;i++){var on=(i==Math.max(c.indexOf(h[v]),0));
var d=insertElement(null,"span",null,rl+((on)?"En":"Dis")+"abled");
if(on){h[v]=c[i];l.setAttribute("data-cycle",i)}else{d.style.display="none"
}insertText(d,c[i]);l.appendChild(d)}l.onclick=function(){reviseAll(b,rname);
var t=this.childNodes,u=this.getAttribute("data-cycle")-0,m=t.length,n,lall,i;
if((end||out)&&u==m-(end?2:1)){if(end){n=this.removeChild(t[u+1]);
n.className=rl+"End";n.style.display="inline";this.parentNode.replaceChild(n,this)
}else{this.parentNode.removeChild(this);return}}else{toggleText(t[u]);
u=(u+1)%m;if(v){h[v]=c[u]}toggleText(t[u]);this.setAttribute("data-cycle",u)
}lall=document.getElementsByClassName(rl+"_"+rname);for(i=0;i<lall.length;
i++){updateLink(lall[i])}};disableLink(l);setTimeout(function(){updateLink(l);
l=null},1)}};macros.mouserevise=macros.hoverrevise={handler:function(a,b,c,d){var endtags=["end"+b],evt=(window.onmouseenter===null?"onmouseenter":"onmouseover"),t=tagcontents(d,[b],endtags,endtags,d.source.indexOf(">>",d.matchStart)+2);
if(t){var rname=c[0].replace(" ","_"),h=insertElement(a,"span",null,"hoverrevise hoverrevise_"+rname),f=function(){var done=!reviseAll("revise",rname);
if(b!="hoverrevise"&&done){this[evt]=null}};new Wikifier(h,t[0]);
if(b=="hoverrevise"){h.onmouseover=f;h.onmouseout=function(){reviseAll("revert",rname)
}}else{h[evt]=f}h=null}}};macros.instantrevise={handler:function(a,b,c,d){reviseAll("revise",c[0].replace(" ","_"))
}};macros.endmouserevise=nullobj;macros.endhoverrevise=nullobj
}());

::ellll [script]
version.extensions.ifMacros={major:2,minor:0,revision:0};macros["if"]={handler:function(place,macroName,params,parser){
var conditions=[],clauses=[],srcOffset=parser.source.indexOf(">>",parser.matchStart)+2,src=parser.source.slice(srcOffset),endPos=-1,currentCond=parser.fullArgs(),currentClause="",t=0,nesting=0;
for(var i=0;i<src.length;i++){if(src.substr(i,9)=="<<endif>>"){nesting--;if(nesting<0){endPos=srcOffset+i+9;
conditions.push(currentCond);clauses.push(currentClause);break;}}if((src.substr(i,6)=="<<else")&&nesting==0){conditions.push(currentCond);
clauses.push(currentClause);currentClause="";t=src.indexOf(">>",i+6);if(src.substr(i+6,4)==" if "){currentCond=Wikifier.parse(src.slice(i+10,t));
}else{currentCond="true";}i=t+2;}if(src.substr(i,5)=="<<if "){nesting++;}currentClause+=src.charAt(i);
}try{if(endPos!=-1){parser.nextMatch=endPos;for(i=0;i<clauses.length;i++){if(eval(conditions.shift())){new Wikifier(place,clauses[i ].trim());
break;}}}else{throwError(place,"can't find matching endif");}}catch(e){throwError(place,"bad condition: "+e.message);
}}};